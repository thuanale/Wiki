1. Azure Storage security strategies:
- Encryption. All data written to Azure Storage is automatically encrypted by
  using Azure Storage encryption.
- Authentication. Azure Active Directory (Azure AD) and role-based access
  control (RBAC) are supported for Azure Storage for both resource management
  operations and data operations.
- Assign RBAC roles scoped to an Azure storage account to security principals,
  and use Azure AD to authorize resource management operations like key
  management.
- Azure AD integration is supported for data operations on Azure Blob Storage
  and Azure Queue Storage.
- Data in transit. Data can be secured in transit between an application and
  Azure by using Client-Side Encryption, HTTPS, or SMB 3.0.
- Disk encryption. Operating system disks and data disks used by Azure Virtual
  Machines can be encrypted by using Azure Disk Encryption.
- Shared access signatures. Delegated access to the data objects in Azure
  Storage can be granted by using a shared access signature (SAS).
- Authorization. Every request made against a secured resource in Blob Storage,
  Azure Files, Queue Storage, or Azure Cosmos DB (Azure Table Storage) must be
  authorized. Authorization ensures that resources in your storage account are
  accessible only when you want them to be, and to only those users or
  applications whom you grant access.

2. Authorization
- Azure Active Directory
- Shared Key: 
  - Shared Key authorization relies on your Azure storage account access keys
    and other parameters to produce an encrypted signature string.
  - The string is passed on the request in the Authorization header.
- Shared access signatures:
  - A SAS delegates access to a particular resource in your Azure storage
    account with specified permissions and for a specified time interval.
  - When you create your shared access signature (SAS), a uniform resource
    identifier (URI) is created by using parameters and tokens.
  - The URI consists of your Azure Storage resource URI and the SAS token.
- Anonymous access to containers and blobs:
  - A public container or blob is accessible to any user for anonymous read
    access.
  - Read requests to public containers and blobs don't require authorization.

3. Azure storage encryption:
- Data is encrypted automatically before it's persisted to Azure Managed Disks,
  Azure Blob Storage, Azure Queue Storage, Azure Cosmos DB (Azure Table
  Storage), or Azure Files.
- Data is automatically decrypted before it's retrieved.
- Azure Storage encryption, encryption at rest, decryption, and key management
  are transparent to users.
- All data written to Azure Storage is encrypted through 256-bit advanced
  encryption standard (AES) encryption. AES is one of the strongest block
  ciphers available.
- Azure Storage encryption is enabled for all new and existing storage accounts
  and can't be disabled.

4. Customer-managed keys:
- By creating your own keys (referred to as customer-managed keys), you have
  more flexibility and greater control.
- You can create, disable, audit, rotate, and define access controls for your
  encryption keys.
- Customer-managed keys can be used with Azure Storage encryption. You can use
  a new key or an existing key vault and key.
- The Azure storage account and the key vault must be in the same region, but
  they can be in different subscriptions.

